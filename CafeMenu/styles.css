h1, h2, p {
    text-align: center;
  }
/*The text is centered again so the link to the CSS file is working. Add another style to the file that changes the background-color property to brown for the body element. */
body {
  /*Since the cafe's main product for sale is coffee, you could use an image of coffee beans for the background of the page.

Delete the comment and its contents inside the body type selector. Now add a background-image property and set its value to url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg).*/
  /*background-color: burlywood;*/

  background-image: url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg);
  /*You can change the font-family of text, to make it look different from the default font of your browser. Each browser has some common fonts available to it. Change all the text in your body, by adding a font-family property with the value sans-serif. This is a fairly common font that is very readable.*/
   font-family: sans-serif;
   padding: 20px;
}
/*The goal now is to make the div not take up the entire width of the page. The CSS width property is perfect for this. Create a new type selector in the style sheet that gives your div element a width of 300px.*/

/*So far you have been using type selectors to style elements. A class selector is defined by a name with a dot directly in front of it, like this:

.class-name {
  styles
}
Change the existing div selector into a class selector by replacing div with a class named menu.*/

.menu {
  /*Next, you want to center the div horizontally. You can do this by setting its margin-left and margin-right properties to auto. Think of the margin as invisible space around an element. Using these two margin properties, center the div element within the body element.*/
  /*You can give your menu some space between the content and the sides with various padding properties.

Give the menu class a padding-left and a padding-right with the same value 20px.*/
 /*Since all 4 sides of the menu have the same internal spacing, go ahead and delete the four properties and use a single padding property with the value 20px.*/ 
  margin-left: auto;
  margin-right: auto;
  padding: 20px;
  background-color:burlywood;
  width: 80%;
  /*The current width of the menu will always take up 80% of the body element's width. On a very wide screen, the coffee and dessert appear far apart from their prices.

Add a max-width property to the menu class with a value of 500px to prevent it from growing too wide.*/
  max-width: 500px;
}

/*Using your new flavor class as a selector, set the text-align property's value to left.*/

/*That's closer, but the price didn't stay over on the right. This is because inline-block elements only take up the width of their content. To spread them out, add a width property to the flavor and price class selectors that have a value of 50% each.*/

/*Well that did not work. Styling the p elements as inline-block and placing them on separate lines in the code creates an extra space to the right of the first p element, causing the second one to shift to the next line. One way to fix this is to make each p element's width a little less than 50%.

Change the width value to 49% for each class to see what happens.*/
/*Now go ahead and change both the flavor and price class' widths to be 50% again.*/

/*If you make the width of the page preview smaller, you will notice at some point, some of the text on the left starts wrapping around to the next line. This is because the width of the p elements on the left side can only take up 50% of the space. Since you know the prices on the right have significantly fewer characters, change the flavor class width value to be 75% and the price class width value to be 25%.*/
.flavor, .dessert {
  text-align: left;
  width:75%;
}
.price {
  text-align: right;
  width:25%;
}
/*The p elements are nested in an article element with the class attribute of item. You can style all the p elements nested anywhere in elements with a class named item like this:
.item p { }
Using the above selector, add a display property with value inline-block so the p elements behave more like inline elements.*/

.item p{
  /*Focusing on the menu items and prices, there is a fairly large gap between each line. Target all the p elements nested in elements with the class named item and set their top and bottom margin to be 5px.*/
display: inline-block;
margin-top:5px;
  margin-bottom: 5px;
  font-size: 18px;
}

/*It is a bit boring for all the text to have the same font-family. You can still have the majority of the text sans-serif and make just the h1 and h2 elements different using a different selector.
Style both the h1 and the h2 elements so that only these elements' text use Impact font.
You can add a fallback value for the font-family by adding another font name separated by a comma. Fallbacks are used in instances where the initial is not found/available.*/

h1, h2 {
  font-family: Impact, serif;
}

.established{
  font-style: italic;
}

/*The typography of heading elements (e.g. h1, h2) is set by default values of users' browsers.

Add two new type selectors (h1 and h2). Use the font-size property for both, but use the value 40px for the h1 and 30px for the h2.*/

h1 {
  font-size: 40px;
  margin-top: 0;
  margin-bottom: 15px;
}
h2 {
  font-size: 30px;
}

/*The default properties of an hr element will make it appear as a thin light grey line. You can change the height of the line by specifying a value for the height property. Change the height of the hr element to be 3px.*/
hr {
  /*Notice how the thickness of the line looks bigger? The default value of a property named border-width is 1px for all edges of hr elements. By changing the border to the same color as the background, the total height of the line is 5px (3px plus the top and bottom border width of 1px). Change the height property of the hr to be 2px, so the total height of it becomes 4px.*/
  height: 2px;
  background-color: brown;
  /*Notice the grey color along the edges of the line. Those edges are known as borders. Each side of an element can have a different color or they can all be the same. Make all the edges of the hr element the same color as the background of it using the border-color property.*/
  border-color: brown;

}

.bottom-line {
  margin-top: 25px;
}

/*FOOTER*/

footer {
  font-size: 14px;
}

/*The default color of a link that has not yet been clicked on is typically blue. The default color of a link that has already been visited from a page is typically purple. To make the footer links the same color regardless if a link has been visited, use a type selector for the anchor element (a) and use the value black for the color property.*/
a {
  color: black;

}
/*You change properties of a link when the link has actually been visited by using a pseudo-selector that looks like a:visited { propertyName: propertyValue; }. Change the color of the footer Visit our website link to be grey when a user has visited the link.*/
a:visited {
  color: black;
}

/*You change properties of a link when the mouse hovers over them by using a pseudo-selector that looks like a:hover { propertyName: propertyValue; }. Change the color of the footer Visit our website link to be brown when a user hovers over it.*/
a:hover {
  color: brown;
}

/*You change properties of a link when the link is actually being clicked by using a pseudo-selector that looks like a:active { propertyName: propertyValue; }. Change the color of the footer Visit our website link to be white when clicked on.*/
a:active {
  color: brown;
}

.address {
  margin-bottom: 5px;
}

img {
  display: block;
  margin-left: auto;
  margin-right: auto;
  /*It would be nice if the vertical space between the h2 elements and their associated icons was smaller. The h2 elements have default top and bottom margin space, so you could change the bottom margin of the h2 elements to say 0 or another number. There is an easier way, simply add a negative top margin to the img elements to pull them up from their current positions. Negative values are created using a - in front of the value. To complete this project, go ahead and use a negative top margin of 25px in the img type selector.*/
  margin-top: -25px;

}